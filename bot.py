import logging
from telegram import Update
from telegram.ext import (
    Application, 
    CommandHandler, 
    MessageHandler, 
    filters, 
    CallbackQueryHandler,
    ContextTypes,
    ConversationHandler
)
from config import BOT_TOKEN, ADMIN_IDS
from database import init_db

# –ò–º–ø–æ—Ä—Ç—ã –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
from handlers.start import start
from handlers.profile import profile
from handlers.search import search_start, handle_search, add_to_cart_callback
from handlers.cart import show_cart, cart_button_handler
from handlers.orders import checkout_handler
from handlers.payment import precheckout_callback, successful_payment_callback
from handlers.help import show_help
from handlers.favorites import show_favorites
from handlers.car_handler import show_user_cars, start_adding_car, handle_car_brand, handle_car_model, handle_car_year, cancel_adding_car
from handlers.address_handler import show_user_addresses, start_adding_address, handle_address_input, cancel_adding_address
from handlers.profile_handlers import show_subscription

# –ò–º–ø–æ—Ä—Ç—ã –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
from admin import admin_panel, is_admin
from admin import admin_add_part_start, admin_get_article, admin_get_name, admin_get_description, admin_get_price, admin_get_category
from admin import admin_edit_part_start, admin_show_stats, admin_cancel, admin_back
from admin import GET_ARTICLE, GET_NAME, GET_DESCRIPTION, GET_PRICE, GET_CATEGORY

from keyboards import get_main_menu_keyboard

# –í–∫–ª—é—á–∏–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO
)

async def admin_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ö–æ–º–∞–Ω–¥–∞ /admin –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤"""
    if is_admin(update.effective_user.id):
        await admin_panel(update, context)
    else:
        await update.message.reply_text("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ")

async def handle_text_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–£–º–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    text = update.message.text
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é" - –≤–æ–∑–≤—Ä–∞—Ç –≤ –ì–õ–ê–í–ù–û–ï –º–µ–Ω—é
    if text == '‚Ü©Ô∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é':
        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Å–µ —Ä–µ–∂–∏–º—ã
        context.user_data.pop('search_mode', None)
        context.user_data.pop('adding_car', None)
        context.user_data.pop('adding_address', None)
        await start(update, context)
        return
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥" - –≤–æ–∑–≤—Ä–∞—Ç –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç
    if text == '‚Ü©Ô∏è –ù–∞–∑–∞–¥':
        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Å–µ —Ä–µ–∂–∏–º—ã
        context.user_data.pop('search_mode', None)
        context.user_data.pop('adding_car', None)
        context.user_data.pop('adding_address', None)
        await profile(update, context)
        return
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–û—Ç–º–µ–Ω–∞"
    if text == '‚Ü©Ô∏è –û—Ç–º–µ–Ω–∞':
        if context.user_data.get('adding_car'):
            await cancel_adding_car(update, context)
            return
        elif context.user_data.get('adding_address'):
            await cancel_adding_address(update, context)
            return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤ –∫–∞–∫–æ–º –ø—Ä–æ—Ü–µ—Å—Å–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    if context.user_data.get('adding_car'):
        car_step = context.user_data.get('car_step')
        if car_step == 'brand':
            await handle_car_brand(update, context)
        elif car_step == 'model':
            await handle_car_model(update, context)
        elif car_step == 'year':
            await handle_car_year(update, context)
        return
    
    elif context.user_data.get('adding_address'):
        await handle_address_input(update, context)
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∂–∏–º –ø–æ–∏—Å–∫–∞ - –µ—Å–ª–∏ –∞–∫—Ç–∏–≤–µ–Ω, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∫ –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
    elif context.user_data.get('search_mode'):
        await handle_search(update, context)
        return
    
    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç —Ç–µ–∫—Å—Ç –±–µ–∑ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞, –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –Ω–∞—á–∞—Ç—å –ø–æ–∏—Å–∫
    else:
        # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∞–∫—Ç–∏–≤–∏—Ä—É–µ–º —Ä–µ–∂–∏–º –ø–æ–∏—Å–∫–∞ –¥–ª—è –ª—é–±–æ–≥–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        # –µ—Å–ª–∏ –Ω–µ—Ç –¥—Ä—É–≥–∏—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ä–µ–∂–∏–º–æ–≤
        context.user_data['search_mode'] = True
        await handle_search(update, context)

def main() -> None:
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    init_db()

    # –°–æ–∑–¥–∞–µ–º Application
    application = Application.builder().token(BOT_TOKEN).build()

    # ConversationHandler –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∞–≤—Ç–æ–º–æ–±–∏–ª—è
    car_conv_handler = ConversationHandler(
        entry_points=[MessageHandler(filters.Regex('^üöó –î–æ–±–∞–≤–∏—Ç—å –∞–≤—Ç–æ–º–æ–±–∏–ª—å$'), start_adding_car)],
        states={
            'brand': [MessageHandler(filters.TEXT & ~filters.COMMAND, handle_car_brand)],
            'model': [MessageHandler(filters.TEXT & ~filters.COMMAND, handle_car_model)],
            'year': [MessageHandler(filters.TEXT & ~filters.COMMAND, handle_car_year)],
        },
        fallbacks=[MessageHandler(filters.Regex('^‚Ü©Ô∏è –û—Ç–º–µ–Ω–∞$'), cancel_adding_car)]
    )
    
    # ConversationHandler –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∞–¥—Ä–µ—Å–∞
    address_conv_handler = ConversationHandler(
        entry_points=[MessageHandler(filters.Regex('^üè† –î–æ–±–∞–≤–∏—Ç—å –∞–¥—Ä–µ—Å$'), start_adding_address)],
        states={
            'address': [MessageHandler(filters.TEXT & ~filters.COMMAND, handle_address_input)],
        },
        fallbacks=[MessageHandler(filters.Regex('^‚Ü©Ô∏è –û—Ç–º–µ–Ω–∞$'), cancel_adding_address)]
    )

    # ConversationHandler –¥–ª—è –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ (–¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤)
    admin_conv_handler = ConversationHandler(
        entry_points=[CallbackQueryHandler(admin_add_part_start, pattern="^admin_add_part$")],
        states={
            GET_ARTICLE: [MessageHandler(filters.TEXT & ~filters.COMMAND, admin_get_article)],
            GET_NAME: [MessageHandler(filters.TEXT & ~filters.COMMAND, admin_get_name)],
            GET_DESCRIPTION: [MessageHandler(filters.TEXT & ~filters.COMMAND, admin_get_description)],
            GET_PRICE: [MessageHandler(filters.TEXT & ~filters.COMMAND, admin_get_price)],
            GET_CATEGORY: [MessageHandler(filters.TEXT & ~filters.COMMAND, admin_get_category)],
        },
        fallbacks=[CommandHandler("cancel", admin_cancel)]
    )

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("admin", admin_command))
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ ConversationHandler
    application.add_handler(car_conv_handler)
    application.add_handler(address_conv_handler)
    application.add_handler(admin_conv_handler)
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
    application.add_handler(MessageHandler(filters.Regex('^üîç –ü–æ–∏—Å–∫ –∑–∞–ø—á–∞—Å—Ç–µ–π$'), search_start))
    application.add_handler(MessageHandler(filters.Regex('^üß∫ –ö–æ—Ä–∑–∏–Ω–∞$'), show_cart))
    application.add_handler(MessageHandler(filters.Regex('^‚ù§Ô∏è –ò–∑–±—Ä–∞–Ω–Ω–æ–µ$'), show_favorites))
    application.add_handler(MessageHandler(filters.Regex('^üë§ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç$'), profile))
    application.add_handler(MessageHandler(filters.Regex('^üÜò –ü–æ–º–æ—â—å$'), show_help))
    application.add_handler(MessageHandler(filters.Regex('^‚Ü©Ô∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é$'), start))
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫ –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞
    application.add_handler(MessageHandler(filters.Regex('^üöó –ú–æ–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª–∏$'), show_user_cars))
    application.add_handler(MessageHandler(filters.Regex('^üè† –ú–æ–π –∞–¥—Ä–µ—Å$'), show_user_addresses))
    application.add_handler(MessageHandler(filters.Regex('^üí≥ –ö—É–ø–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É$'), show_subscription))
    application.add_handler(MessageHandler(filters.Regex('^‚Ü©Ô∏è –ù–∞–∑–∞–¥$'), profile))
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
    application.add_handler(MessageHandler(filters.Regex('^üöó –î–æ–±–∞–≤–∏—Ç—å –∞–≤—Ç–æ–º–æ–±–∏–ª—å$'), start_adding_car))
    application.add_handler(MessageHandler(filters.Regex('^üè† –î–æ–±–∞–≤–∏—Ç—å –∞–¥—Ä–µ—Å$'), start_adding_address))
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_text_message))
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ callback-–∑–∞–ø—Ä–æ—Å–æ–≤
    application.add_handler(CallbackQueryHandler(cart_button_handler, pattern="^cart_"))
    application.add_handler(CallbackQueryHandler(add_to_cart_callback, pattern="^add_"))
    application.add_handler(CallbackQueryHandler(add_to_cart_callback, pattern="^new_search$"))
    application.add_handler(CallbackQueryHandler(checkout_handler, pattern="^checkout$"))
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ callback –¥–ª—è –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
    application.add_handler(CallbackQueryHandler(admin_edit_part_start, pattern="^admin_edit_part$"))
    application.add_handler(CallbackQueryHandler(admin_show_stats, pattern="^admin_stats$"))
    application.add_handler(CallbackQueryHandler(admin_back, pattern="^admin_back$"))

    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    print("–ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
    application.run_polling()

if __name__ == '__main__':
    main()