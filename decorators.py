from functools import wraps
from telegram import Update
from telegram.ext import ContextTypes
from database import get_user

def check_subscription(func):
    """–î–µ–∫–æ—Ä–∞—Ç–æ—Ä –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    @wraps(func)
    async def wrapped(update: Update, context: ContextTypes.DEFAULT_TYPE, *args, **kwargs):
        user_id = update.effective_user.id
        
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –ë–î
        user_data = get_user(user_id)
        if not user_data:
            await update.message.reply_text("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ù–∞—á–Ω–∏—Ç–µ —Å /start")
            return
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏ (user_data - —ç—Ç–æ –∫–æ—Ä—Ç–µ–∂, –ø–æ–¥–ø–∏—Å–∫–∞ –≤ –∏–Ω–¥–µ–∫—Å–µ 4)
        is_subscribed = user_data[4] if len(user_data) > 4 else False
        
        if not is_subscribed:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø update –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ
            if hasattr(update, 'message') and update.message:
                await update.message.reply_text(
                    "‚ùå –î–ª—è —ç—Ç–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è –Ω—É–∂–Ω–∞ –ø–æ–¥–ø–∏—Å–∫–∞!\n"
                    "–û—Ñ–æ—Ä–º–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É –≤ üë§ –õ–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ"
                )
            elif hasattr(update, 'callback_query') and update.callback_query:
                await update.callback_query.answer(
                    "‚ùå –ù—É–∂–Ω–∞ –ø–æ–¥–ø–∏—Å–∫–∞! –û—Ç–∫—Ä–æ–π—Ç–µ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç",
                    show_alert=True
                )
            return
        
        # –ï—Å–ª–∏ –ø–æ–¥–ø–∏—Å–∫–∞ –µ—Å—Ç—å, –≤—ã–ø–æ–ª–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
        return await func(update, context, *args, **kwargs)
    return wrapped