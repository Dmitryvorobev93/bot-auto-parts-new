from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import ContextTypes
from database import add_user_address, get_user_addresses
from keyboards import get_profile_keyboard, get_main_menu_keyboard, get_address_keyboard, get_cancel_keyboard

async def show_user_addresses(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–∫–∞–∑–∞—Ç—å –∞–¥—Ä–µ—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    user_id = update.effective_user.id
    addresses = get_user_addresses(user_id)
    
    if not addresses:
        await update.message.reply_text(
            "üè† –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö –∞–¥—Ä–µ—Å–æ–≤.\n\n"
            "–ù–∞–∂–º–∏—Ç–µ '–î–æ–±–∞–≤–∏—Ç—å –∞–¥—Ä–µ—Å' —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –ø–µ—Ä–≤—ã–π –∞–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏.",
            reply_markup=get_address_keyboard()
        )
        return
    
    addresses_text = "üè† <b>–í–∞—à–∏ –∞–¥—Ä–µ—Å–∞:</b>\n\n"
    for address in addresses:
        addr_id, user_id, address_text = address
        addresses_text += f"‚Ä¢ {address_text}\n"
    
    await update.message.reply_text(
        addresses_text,
        parse_mode='HTML',
        reply_markup=get_address_keyboard()
    )

async def start_adding_address(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ù–∞—á–∞–ª–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∞–¥—Ä–µ—Å–∞"""
    context.user_data['adding_address'] = True
    
    await update.message.reply_text(
        "üè† <b>–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∞–¥—Ä–µ—Å–∞</b>\n\n"
        "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –∞–¥—Ä–µ—Å –¥–ª—è –¥–æ—Å—Ç–∞–≤–∫–∏:\n\n"
        "–§–æ—Ä–º–∞—Ç: –ì–æ—Ä–æ–¥, —É–ª–∏—Ü–∞, –¥–æ–º, –∫–≤–∞—Ä—Ç–∏—Ä–∞\n"
        "–ù–∞–ø—Ä–∏–º–µ—Ä: –ú–æ—Å–∫–≤–∞, —É–ª. –õ–µ–Ω–∏–Ω–∞, –¥. 15, –∫–≤. 42",
        parse_mode='HTML',
        reply_markup=get_cancel_keyboard()
    )

async def handle_address_input(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –∞–¥—Ä–µ—Å–∞"""
    if update.message.text == '‚Ü©Ô∏è –û—Ç–º–µ–Ω–∞':
        await cancel_adding_address(update, context)
        return
    
    address = update.message.text.strip()
    user_id = update.effective_user.id
    
    if len(address) < 10:
        await update.message.reply_text(
            "‚ùå –ê–¥—Ä–µ—Å —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π. –í–≤–µ–¥–∏—Ç–µ –ø–æ–ª–Ω—ã–π –∞–¥—Ä–µ—Å:",
            reply_markup=get_cancel_keyboard()
        )
        return
    
    success = add_user_address(user_id, address)
    
    if success:
        await update.message.reply_text(
            f"‚úÖ –ê–¥—Ä–µ—Å —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω:\n{address}",
            reply_markup=get_address_keyboard()
        )
    else:
        await update.message.reply_text(
            "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∞–¥—Ä–µ—Å–∞",
            reply_markup=get_address_keyboard()
        )
    
    # –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    await cancel_adding_address(update, context)

async def cancel_adding_address(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û—Ç–º–µ–Ω–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∞–¥—Ä–µ—Å–∞"""
    context.user_data.pop('adding_address', None)
    
    if update.message.text != '‚Ü©Ô∏è –û—Ç–º–µ–Ω–∞':
        await update.message.reply_text(
            "–û–ø–µ—Ä–∞—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∞–¥—Ä–µ—Å–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞",
            reply_markup=get_address_keyboard()
        )
    else:
        await update.message.reply_text(
            "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∞–¥—Ä–µ—Å–∞ –æ—Ç–º–µ–Ω–µ–Ω–æ",
            reply_markup=get_address_keyboard()
        )