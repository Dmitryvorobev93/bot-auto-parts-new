from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import ContextTypes, ConversationHandler
from database import add_user_car, get_user_cars, add_user_address, get_user_addresses
from keyboards import get_profile_keyboard, get_back_to_menu_keyboard

# –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è ConversationHandler
GETTING_BRAND, GETTING_MODEL, GETTING_YEAR = range(3)
GETTING_ADDRESS = 4

async def show_user_cars(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–∫–∞–∑–∞—Ç—å –∞–≤—Ç–æ–º–æ–±–∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    user_id = update.effective_user.id
    cars = get_user_cars(user_id)
    
    if not cars:
        keyboard = [['üöó –î–æ–±–∞–≤–∏—Ç—å –∞–≤—Ç–æ–º–æ–±–∏–ª—å'], ['‚Ü©Ô∏è –ù–∞–∑–∞–¥']]
        await update.message.reply_text(
            "–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π.",
            reply_markup=ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
        )
        return
    
    cars_text = "üöó –í–∞—à–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª–∏:\n\n"
    for car in cars:
        car_id, user_id, brand, model, year = car
        cars_text += f"{brand} {model} ({year} –≥–æ–¥)\n"
    
    keyboard = [['üöó –î–æ–±–∞–≤–∏—Ç—å –∞–≤—Ç–æ–º–æ–±–∏–ª—å'], ['‚Ü©Ô∏è –ù–∞–∑–∞–¥']]
    await update.message.reply_text(
        cars_text,
        reply_markup=ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    )

async def add_car_start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ù–∞—á–∞–ª–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∞–≤—Ç–æ–º–æ–±–∏–ª—è"""
    await update.message.reply_text(
        "–í–≤–µ–¥–∏—Ç–µ –º–∞—Ä–∫—É –∞–≤—Ç–æ–º–æ–±–∏–ª—è (–Ω–∞–ø—Ä–∏–º–µ—Ä: Geely, Chery, Haval):",
        reply_markup=ReplyKeyboardMarkup([['‚Ü©Ô∏è –û—Ç–º–µ–Ω–∞']], resize_keyboard=True)
    )
    return GETTING_BRAND

async def add_car_brand(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –º–∞—Ä–∫–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª—è"""
    context.user_data['car_brand'] = update.message.text
    await update.message.reply_text("–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –º–æ–¥–µ–ª—å –∞–≤—Ç–æ–º–æ–±–∏–ª—è (–Ω–∞–ø—Ä–∏–º–µ—Ä: Coolray, Tiggo 7, Jolion):")
    return GETTING_MODEL

async def add_car_model(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª—è"""
    context.user_data['car_model'] = update.message.text
    await update.message.reply_text("–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –≥–æ–¥ –≤—ã–ø—É—Å–∫–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: 2022):")
    return GETTING_YEAR

async def add_car_finish(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∞–≤—Ç–æ–º–æ–±–∏–ª—è"""
    try:
        year = int(update.message.text)
        user_id = update.effective_user.id
        brand = context.user_data.get('car_brand', '')
        model = context.user_data.get('car_model', '')
        
        if not brand or not model:
            await update.message.reply_text(
                "‚ùå –û—à–∏–±–∫–∞: –¥–∞–Ω–Ω—ã–µ –∞–≤—Ç–æ–º–æ–±–∏–ª—è –Ω–µ–ø–æ–ª–Ω—ã–µ",
                reply_markup=get_profile_keyboard()
            )
            return ConversationHandler.END
        
        success = add_user_car(user_id, brand, model, year)
        
        if success:
            await update.message.reply_text(
                f"‚úÖ –ê–≤—Ç–æ–º–æ–±–∏–ª—å —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!\n\n"
                f"–ú–∞—Ä–∫–∞: {brand}\n"
                f"–ú–æ–¥–µ–ª—å: {model}\n"
                f"–ì–æ–¥: {year}",
                reply_markup=get_profile_keyboard()
            )
        else:
            await update.message.reply_text(
                "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª—è",
                reply_markup=get_profile_keyboard()
            )
    except ValueError:
        await update.message.reply_text(
            "‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≥–æ–¥ —Ü–∏—Ñ—Ä–∞–º–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä: 2022)",
            reply_markup=ReplyKeyboardMarkup([['‚Ü©Ô∏è –û—Ç–º–µ–Ω–∞']], resize_keyboard=True)
        )
        return GETTING_YEAR
    
    # –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    context.user_data.pop('car_brand', None)
    context.user_data.pop('car_model', None)
    
    return ConversationHandler.END

async def show_user_addresses(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–∫–∞–∑–∞—Ç—å –∞–¥—Ä–µ—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    user_id = update.effective_user.id
    addresses = get_user_addresses(user_id)
    
    if not addresses:
        keyboard = [['üè† –î–æ–±–∞–≤–∏—Ç—å –∞–¥—Ä–µ—Å'], ['‚Ü©Ô∏è –ù–∞–∑–∞–¥']]
        await update.message.reply_text(
            "–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö –∞–¥—Ä–µ—Å–æ–≤.",
            reply_markup=ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
        )
        return
    
    addresses_text = "üè† –í–∞—à–∏ –∞–¥—Ä–µ—Å–∞:\n\n"
    for address in addresses:
        addr_id, user_id, address_text = address
        addresses_text += f"‚Ä¢ {address_text}\n"
    
    keyboard = [['üè† –î–æ–±–∞–≤–∏—Ç—å –∞–¥—Ä–µ—Å'], ['‚Ü©Ô∏è –ù–∞–∑–∞–¥']]
    await update.message.reply_text(
        addresses_text,
        reply_markup=ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    )

async def add_address_start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ù–∞—á–∞–ª–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∞–¥—Ä–µ—Å–∞"""
    await update.message.reply_text(
        "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –∞–¥—Ä–µ—Å –¥–ª—è –¥–æ—Å—Ç–∞–≤–∫–∏ (–≥–æ—Ä–æ–¥, —É–ª–∏—Ü–∞, –¥–æ–º, –∫–≤–∞—Ä—Ç–∏—Ä–∞):",
        reply_markup=ReplyKeyboardMarkup([['‚Ü©Ô∏è –û—Ç–º–µ–Ω–∞']], resize_keyboard=True)
    )
    return GETTING_ADDRESS

async def add_address_finish(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∞–¥—Ä–µ—Å–∞"""
    address = update.message.text
    user_id = update.effective_user.id
    
    if not address or len(address.strip()) < 5:
        await update.message.reply_text(
            "‚ùå –ê–¥—Ä–µ—Å —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –ø–æ–ª–Ω—ã–π –∞–¥—Ä–µ—Å.",
            reply_markup=ReplyKeyboardMarkup([['‚Ü©Ô∏è –û—Ç–º–µ–Ω–∞']], resize_keyboard=True)
        )
        return GETTING_ADDRESS
    
    success = add_user_address(user_id, address.strip())
    
    if success:
        await update.message.reply_text(
            f"‚úÖ –ê–¥—Ä–µ—Å —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω:\n{address}",
            reply_markup=get_profile_keyboard()
        )
    else:
        await update.message.reply_text(
            "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∞–¥—Ä–µ—Å–∞",
            reply_markup=get_profile_keyboard()
        )
    
    return ConversationHandler.END

async def show_subscription(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–¥–ø–∏—Å–∫–µ"""
    await update.message.reply_text(
        "üí≥ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–¥–ø–∏—Å–∫–µ:\n\n"
        "–ü–æ–¥–ø–∏—Å–∫–∞ –¥–∞–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å:\n"
        "‚Ä¢ –î–æ–±–∞–≤–ª—è—Ç—å —Ç–æ–≤–∞—Ä—ã –≤ –∫–æ—Ä–∑–∏–Ω—É\n"
        "‚Ä¢ –û—Ñ–æ—Ä–º–ª—è—Ç—å –∑–∞–∫–∞–∑—ã\n"
        "‚Ä¢ –ü–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Å–∫–∏–¥–∫–∞—Ö\n\n"
        "–°—Ç–æ–∏–º–æ—Å—Ç—å: 499 —Ä—É–±./–º–µ—Å—è—Ü\n\n"
        "–î–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º: @support",
        reply_markup=get_profile_keyboard()
    )

async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û—Ç–º–µ–Ω–∞ –æ–ø–µ—Ä–∞—Ü–∏–∏"""
    await update.message.reply_text(
        "–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞",
        reply_markup=get_profile_keyboard()
    )
    
    # –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    context.user_data.pop('car_brand', None)
    context.user_data.pop('car_model', None)
    
    return ConversationHandler.END