from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes
from database import search_parts, add_to_cart_db
from decorators import check_subscription

async def search_start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ù–∞—á–∞–ª–æ –ø–æ–∏—Å–∫–∞ (–¥–æ—Å—Ç—É–ø–Ω–æ –≤—Å–µ–º)"""
    await update.message.reply_text("üîç –í–≤–µ–¥–∏—Ç–µ –∞—Ä—Ç–∏–∫—É–ª –∏–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∑–∞–ø—á–∞—Å—Ç–∏:")

async def handle_search(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ (–¥–æ—Å—Ç—É–ø–Ω–æ –≤—Å–µ–º)"""
    search_query = update.message.text
    results = search_parts(search_query)
    
    if not results:
        await update.message.reply_text("üòî –ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
        return
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞
    for item in results:
        article, name, price, in_stock = item
        keyboard = []
        
        if in_stock:
            # –ö–Ω–æ–ø–∫–∞ "–í –∫–æ—Ä–∑–∏–Ω—É" —Ç—Ä–µ–±—É–µ—Ç –ø–æ–¥–ø–∏—Å–∫–∏
            keyboard.append([InlineKeyboardButton("‚ûï –í –∫–æ—Ä–∑–∏–Ω—É", callback_data=f"add_{article}")])
        
        reply_markup = InlineKeyboardMarkup(keyboard) if keyboard else None
        
        text = f"üîπ {name}\nüì¶ –ê—Ä—Ç–∏–∫—É–ª: {article}\nüí∞ –¶–µ–Ω–∞: {price} —Ä—É–±.\n{'‚úÖ –í –Ω–∞–ª–∏—á–∏–∏' if in_stock else '‚ùå –ù–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏'}"
        await update.message.reply_text(text, reply_markup=reply_markup)

@check_subscription
async def add_to_cart_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –∫–æ—Ä–∑–∏–Ω—É (—Ç–æ–ª—å–∫–æ –¥–ª—è –ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã—Ö)"""
    query = update.callback_query
    await query.answer()
    
    article = query.data.split("_")[1]
    user_id = query.from_user.id
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä –≤ –∫–æ—Ä–∑–∏–Ω—É
    success = add_to_cart_db(user_id, article)
    
    if success:
        await query.answer("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∫–æ—Ä–∑–∏–Ω—É!")
    else:
        await query.answer("‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è", show_alert=True)